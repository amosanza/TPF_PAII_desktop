package modeloDatosTPF;
// Generated 31 oct. 2021 21:16:53 by Hibernate Tools 4.3.1


import dbasTPF.DBADetPro;
import dbasTPF.DBAOrden;
import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Proyecto generated by hbm2java
 */
@Entity
@Table(name="proyecto"
    ,schema="public"
)
public class Proyecto  implements java.io.Serializable {


     private int id;
     private Cultivo cultivo;
     private Lote lote;
     private Situacionanormal situacionanormal;
     private String estadoproyecto;
     private Set<Detalleproyecto> detalleproyectos = new HashSet<Detalleproyecto>(0);

    public Proyecto() {
    }

	
    public Proyecto(Cultivo cultivo, Lote lote, String estadoproyecto) {
        this.cultivo = cultivo;
        this.lote = lote;
        this.estadoproyecto = estadoproyecto;
    }
    public Proyecto(Cultivo cultivo, Lote lote, Situacionanormal situacionanormal, String estadoproyecto, Set<Detalleproyecto> detalleproyectos) {
       this.cultivo = cultivo;
       this.lote = lote;
       this.situacionanormal = situacionanormal;
       this.estadoproyecto = estadoproyecto;
       this.detalleproyectos = detalleproyectos;
    }
   
     @Id 
    @Column(name="id", unique=true, nullable=false)
    @GeneratedValue(strategy = IDENTITY)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fkcultivo", nullable=false)
    public Cultivo getCultivo() {
        return this.cultivo;
    }
    
    public void setCultivo(Cultivo cultivo) {
        this.cultivo = cultivo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fklote", nullable=false)
    public Lote getLote() {
        return this.lote;
    }
    
    public void setLote(Lote lote) {
        this.lote = lote;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fksituacionanormal")
    public Situacionanormal getSituacionanormal() {
        return this.situacionanormal;
    }
    
    public void setSituacionanormal(Situacionanormal situacionanormal) {
        this.situacionanormal = situacionanormal;
    }

    
    @Column(name="estadoproyecto", nullable=false)
    public String getEstadoproyecto() {
        return this.estadoproyecto;
    }
    
    public void setEstadoproyecto(String estadoproyecto) {
        this.estadoproyecto = estadoproyecto;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="proyecto")
    public Set<Detalleproyecto> getDetalleproyectos() {
        return this.detalleproyectos;
    }
    
    public void setDetalleproyectos(Set<Detalleproyecto>detalleproyectos) {
        this.detalleproyectos = detalleproyectos;
    }

    public void crearDetalleproyectos(Orden orden, String estadoCultivo) {
        Date fechaActual = new Date();
        DBADetPro dba = new DBADetPro();
        Detalleproyecto detpro = new Detalleproyecto(orden, this,fechaActual,null,estadoCultivo);
        //this.detalleproyectos.add(detpro);
        dba.agregarDetPro(detpro);
    }
    
    public Orden primerOrden(int ordEj, Etapaproyecto etPro){
        DBAOrden dba = new DBAOrden();
        return dba.ordenArealizar(ordEj, etPro, this.cultivo);
    }

    public boolean equals(int i){
        return Objects.equals(this.id, i);
    }
    
    public void finalizarDetPro(Detalleproyecto detPro){
        Date fechaActual = new Date();
        DBADetPro dba = new DBADetPro();
        detPro.setFechafin(fechaActual);
        dba.actualizar(detPro);
    }
}


